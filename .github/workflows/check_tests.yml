name: Check-Tests

on:
  workflow_dispatch:
      inputs:
      application:
        description: 'Name of application'
        required: true
        default: 'SecretBox'
      page:
        description: 'Page to navigate to'
        required: true
        default: 'dashboard'


jobs:
  build:
    runs-on: 
      - ubuntu-latest
    steps:
      - uses: actions/checkout@v4      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv sync
      
      - name: Prepare environment
        run: |
          cp .env.example .env
          python manage.py migrate
          python manage.py collectstatic --noinput
      
      - name: Install pytest
        run: |
          uv add pytest pytest-django pytest-cov
 
  performance-checks:
    needs: build
    runs-on: 
      - ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run performance checks
        run: |
          pytest --benchmark-only
  
  unit-tests:
    needs: build
    runs-on: 
      - ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run unit tests
        run: |
          export DJANGO_SETTINGS_MODULE=config.settings.test
          uv run manage.py create_test_user
          uv run pytest tests/unit tests/integration --html=tests/htmlcov/secretbox.html
          # bandit -r comptaquest
          # safety check

  playwright-tests:
    needs: build
    runs-on: 
      - ubuntu-latest
    steps:
      - name: Run Playwright tests
        run: |
        npx playwright install
        npx playwright test

  integration-tests:
    needs: build
    runs-on: 
      - ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install pytest
        run: |
          pip install uv
          uv add pytest pytest-django pytest-cov
      - name: Run integration tests
        run: |
          pytest tests/integration --cov=comptaquest --cov-report=xml
          # bandit -r comptaquest
          # safety check

  deploy:
    needs: [unit-tests, integration-tests, performance-checks, code-quality]
    runs-on: 
      - ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build and deploy
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Déploiement en cours..."
          # Exemple pour un déploiement sur un serveur :
          # scp -r . user@server:/path/to/deploy
          # ssh user@server "cd /path/to/deploy && docker-compose up -d"
          uv run manage.py loaddata secretbox/tools/loaddata/colorparameter.json